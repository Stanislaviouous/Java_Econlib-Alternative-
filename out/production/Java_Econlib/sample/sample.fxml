<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.chart.CategoryAxis?>
<?import javafx.scene.chart.LineChart?>
<?import javafx.scene.chart.NumberAxis?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.shape.Arc?>
<?import javafx.scene.text.Font?>

<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="600.0" prefWidth="800.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.Controller">
   <children>
      <ImageView fitHeight="600.0" fitWidth="800.0">
         <image>
            <Image url="@backk.jpg" />
         </image>
      </ImageView>
      <AnchorPane layoutX="46.0" layoutY="33.0" prefHeight="533.0" prefWidth="214.0" style="-fx-background-color: #6F734F;" />
      <AnchorPane layoutX="295.0" layoutY="29.0" prefHeight="238.0" prefWidth="214.0" style="-fx-background-color: #6F734F;" />
      <AnchorPane layoutX="295.0" layoutY="326.0" prefHeight="238.0" prefWidth="214.0" style="-fx-background-color: #6F734F;" />
      <AnchorPane layoutX="544.0" layoutY="31.0" prefHeight="533.0" prefWidth="214.0" style="-fx-background-color: #6F734F;" />
      <Arc fill="#6f734f" layoutX="299.0" layoutY="262.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="90.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="52.0" layoutY="562.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="90.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="52.0" layoutY="38.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="360.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="300.0" layoutY="33.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="360.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="549.0" layoutY="35.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="360.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="254.0" layoutY="38.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="270.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="504.0" layoutY="35.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="270.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="753.0" layoutY="35.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="270.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="548.0" layoutY="559.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="90.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="255.0" layoutY="562.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="180.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="504.0" layoutY="262.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="180.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <Arc fill="#6f734f" layoutX="753.0" layoutY="559.0" length="270.0" radiusX="8.0" radiusY="8.0" startAngle="180.0" stroke="#6f734f" strokeType="INSIDE" type="ROUND" />
      <TextArea fx:id="Conclusion1" layoutX="52.0" layoutY="37.0" prefHeight="525.0" prefWidth="204.0" promptText="Наименование и описание " style="-fx-background-color: #6F734F;" text="E_pd(P1, Q1, P2, Q2)&#10;Функция для подсчёта эластичности спроса по цене:&#10;| P1 - первоначальная цена в выбранном интервале,&#10;| P2 - конечная цена в выбранном интервале,&#10;| P - прирост цены,&#10;| Q1 - первоначальный объём спроса в выбранном интервале,&#10;| Q2 - конечный объём спроса в выбранном интервале,&#10;| Q - прирост объёма спроса&#10;&#9;P = P2 - P1;&#10;        Q = Q2 - Q1;&#10;        |(((P1 + P2) / (Q1 + Q2)) * (Q / P))|&#10;&#10;E_yd(Y1, Q1, Y2, Q2) &#10;Функция для подсчёта эластичности спроса по доходам:&#10;| Y1 - первоначальный доход в выбранном интервале,&#10;| Y2 - конечный доход в выбранном интервале,&#10;| Y - прирост доходов,&#10;| Q1 - первоначальный объём спроса в выбранном интервале,&#10;| Q2 - конечный объём спроса в выбранном интервале,&#10;| Q - прирост объёма спроса&#10;&#9;Y = Y2 - Y1;&#10;        Q = Q2 - Q1;&#10;&#9;(((Y1 + Y2) / (Q1 + Q2)) * (Q / Y))&#10;&#10;E_ps(P1, Q1, P2, Q2) &#10;Функция для подсчёта эластичности предложения по цене:&#10;| P1 - первоначальная цена в выбранном интервале,&#10;| P2 - конечная цена в выбранном интервале,&#10;| P - прирост цены,&#10;| Q1 - первоначальный объём предложения в выбранном интервале,&#10;| Q2 - конечный объём предложения в выбранном интервале,&#10;| Q - прирост объёма предложения&#10;&#9;P = P2 - P1;&#10;        Q = Q2 - Q1;&#10;        |((((P1 + P2) / (Q1 + Q2)) * (Q / P)))|&#10;&#10;Y_k( Pk, Qk) {&#10;Функция для подсчёта дохода,где&#10;| Pk - цена единицы продукта,&#10;| Qk - кол-во проданной продукции&#10;&#9;Pk * Qk&#10;&#10;P_k( Yk, Qk)  &#10;Функция для подсчёта цены исходя из дохода и проданной продукции:&#10;| Yk - доход,&#10;| Qk - количество проданной продукции&#10;&#9;Yk / Qk&#10;&#10; Q_k( Yk, Pk)  &#10;Функция для подсчёта количества проданного товара исходя из цены и дохода,где&#10;| Pk - цена единицы продукта,&#10;| Yk - доход&#10;&#9;Yk / Pk&#10;&#10; LernerIndex_1(Epd)  &#10;Расчёт индекса Лернера:&#10;| Epd - эластичность спроса по цене &#10;&#9;1 / (-Epd)&#10;&#10; LernerIndex_2( P, MC)  &#10;Расчёт индекса Лернера:&#10;| P - цена,&#10;| MC - предельные издержки &#10;&#9;(P - MC) / P&#10;&#10; LernerIndex_3( P, ATC)  &#10;Расчёт индекса Лернера:&#10;| P - цена,&#10;| ATC - средние общие издержки &#10;&#9;(P - ATC) / ATC&#10;&#10; LernerIndex_4( P, T_C)  &#10;Расчёт индекса Лернера:&#10;| P - цена,&#10;| T_C - общие издержки&#10;&#9;P / T_C &#10;&#10; TC( FC, VC)  &#10;Расчёт общих издержек:&#10;| FC - постоянные издержки,&#10;| VC - переменные издержки &#10;&#9;FC + VC&#10;&#10; AC_1( T_C, Q)  &#10;Расчёт средних постоянных издержек:&#10;| T_C - общие издержки,&#10;| Q - обЪём выпуска продукции&#10;&#9;T_C / Q&#10;&#10; AFC( FC, Q)  &#10;Расчёт средних постоянных издержек:&#10;| FC - постоянные издержки,&#10;| Q - обЪём выпуска продукции &#10;&#9;FC / Q&#10;&#10; AVC( VC, Q)  &#10;Расчёт средних переменных издержек:&#10;| VC -  переменные издержки,&#10;| Q - обЪём выпуска продукции&#10;&#9;VC / Q&#10;&#10; AC_2( A_FC, A_VC)  &#10;Расчёт средних постоянных издержек:&#10;| A_FC - средние постоянные издержки,&#10;| A_VC - средние переменные издержки&#10;&#9; A_FC + A_VC&#10;&#10; GiniIndex(int n, y[])  &#10;Расчёта Индекса Джини:&#10;| n - количество слоёв населения с неравномерными доходами,&#10;| y[] - массив процентных долей доходов каждого из слоёв&#10;        ykam[0] = y[0];&#10;        int i = 1&#10;&#9;Пока (i &lt; n) мы:&#10;            &#9;ykam[i] = ykam[i - 1] + y[i];&#10;&#9;&#9;i++&#10;        Итак,&#10;        x = (float) (1 / n);&#10;        |(1 - 2 * x * sum(ykam, n) + x)|&#10;&#10; MU_A( TU1, Q1, TU2, Q2)  &#10;Расчёт предельной полезности:&#10;| TU1 - начальная общая полезность товара А&#10;| Q1 - начальное количество товара А&#10;| TU2 - конечная общая полезность товара А&#10;| Q2 - конечное количество товара А &#10;&#9;(TU1 - TU2) / (Q1 - Q2)&#10;&#10; AP_L( Q, L)  &#10;Средняя производительность труда:&#10;| Q - объём произведённой продукции&#10;| L - объём затраченной рабочей силы(объём труда) &#10;&#9;Q / L&#10;&#10; AP_K( Q, K)  &#10;Величина средней капиталоотдачи:&#10;| Q - объём произведённой продукции&#10;| K - количество капитала  &#10;&#9;Q / K&#10;&#10; MP_L( Q1, L1, Q2, L2)  &#10;Расчёт предельного продукта труда:&#10;| Q1 - начальное количество товара&#10;| L1 - начальное количество труда&#10;| Q2 - конечное количество товара&#10;| L2 - конечное количество труда &#10;&#9; (Q1 - Q2) / (L1 - L2)&#10;&#10; MP_K( Q1, K1, Q2, K2)  &#10;Расчёт предельного продукта капитала:&#10;| Q1 - начальное количество товара&#10;| K1 - начальное количество капитала&#10;| Q2 - конечное количество товара&#10;| K2 - конечное количество капитала  &#10;&#9;(Q1 - Q2) / (K1 - K2)&#10;&#10; FV_simple( PV, r, n)  &#10;Расчет будущей стоимости вложений &#10;при начислении простого процента при вкладе на 1 год или более:&#10;| PV – текущая стоимость вложения&#10;| r- ставка процента под который размещаются средства в расчете на 1 год, выраженный в долях еденицы&#10;| n – количество начисления процентов под ставку r &#10;&#9; PV * (1 + r * n)&#10;&#10; FV_complex( PV, r, n)  &#10;Расчет будущей стоимости вложений при начислении сложного процента при вкладе на 1 год или более:&#10;| PV – текущая стоимость вложения&#10;| r- ставка процента под который размещаются средства в расчете на 1 год, &#10;выраженный в долях еденицы&#10;| n – количество начисления процентов под ставку r  &#10;&#9;(PV * (1 + r)^ n) )&#10;&#10; PV_coupon( N, r, u, n)  &#10;Расчет текущей стоимости купонной облигации:&#10;| N – номинал облигации&#10;| r- ставка без риска, выраженный в долях единицы&#10;| u – размер выплачиваемого купона&#10;| n – кол-во лет жизни облигации  &#10;&#9;PV = 0&#10;&#9;i = 1;&#10;        Пока(i &lt;= n) мы:&#10;            PV = (float) (PV + (u / (1 + r)^ i));&#10;            i++;&#10;        Итак,&#10;        (PV + (N / Math.pow(1 + r, i)))&#10;&#10; PV_discount( N, r, n)  &#10;Расчет текущей стоимости дисконтной облигации:&#10;| N – номинал облигации&#10;| r- ставка без риска, выраженный в долях единицы&#10;| n – кол-во лет жизни облигации  &#10;&#9;(N / ((1 + r)^n))&#10;&#10; CPO( DPO, N, r, DS, DE, n)  &#10;Расчет чистой цены облигации:&#10;| DPO – грязная цена облигации&#10;| N – номинал облигации;&#10;| r- ставка без риска, выраженный в долях еденицы;&#10;| DS – день начала купонного периода&#10;| DE – день окончания или дня расчета НКД&#10;| n – кол-во лет жизни облигации&#10;&#9;  (DPO - (N * r * (DS - DE) / Math.pow(1 + r, n)))&#10;&#10; D_one( N, r, C, n, P)  &#10;Расчет дюрации Маколея при выплате купона один раз в год&#10;| N – номинал облигации;&#10;| r - ставка без риска, выраженная в долях единицы&#10;| С – размер выплачиваемого купона&#10;| n – кол-во лет жизни облигации&#10;| P – текущая стоимость облигации&#10;| D – дюрация Маколея&#10;&#9;D = 0&#10;&#9;i = 1;&#10;        Пока (i &lt;= n) мы: &#10;            D = (D + (i * C / (1 + r)^i)))&#10;            i++&#10;&#9;Итак,&#10;        ((D + n * (C + N) / (1 + r)^ n)) / P)  &#10;&#9;&#10;&#10; D_more( N, r, C, n, P, m)  &#10;Расчет дюрации Маколея при выплате купона несколько раз в год&#10;| N – номинал облигации;&#10;| r - ставка без риска, выраженная в долях единицы&#10;| С – размер выплачиваемого купона&#10;| n – кол-во лет жизни облигации&#10;| P – текущая стоимость облигации&#10;| D – дюрация Маколея&#10;| m – кол-во выплат купона в году  &#10;&#9;((C / P) * (n * N / (P * (r + 1 / m)^( m * n))) * (((1 + r / m)^(m * n + 1) - n * r - (1 + r / m)) /&#10;&#9; (r * r * (1 + r / m)^(m * n))))&#10;&#10; D_one_wut( N, r, C, n, P)  &#10;Расчет дюрации Маколея при выплате купона &#10;один раз в год и сроки жизни облигации много лет&#10;| N – номинал облигации;&#10;| r - ставка без риска, выраженная в долях единицы&#10;| С – размер выплачиваемого купона&#10;| n – кол-во лет жизни облигации&#10;| P – текущая стоимость облигации&#10;| D – дюрация Маколея  &#10;&#9;((C / P) * (n * N / (P * ((1 + r)^n))) * &#10;&#9;(((1 + r)^(n + 1) - n * r - (1 + r)) / (r * r * ((1 + r)^n))))&#10;&#10; GDP_1( C, I, G, X)  &#10;Расчет ВВП на душу населения:&#10;| С – траты потребителей&#10;| I – инвестиции&#10;| G – гос  затраты&#10;| X – показатель чистого экспорта &#10;(от общей стоимости вывозимых отнимаем сумму ввозимых)  &#10;&#9;C + I + G + X&#10;&#10; GDP_2( VA, TPI, SIM)  &#10;Расчет ВВП на душу населения:&#10;| VA - добавленная стоимость&#10;| TPI – налог на производство и импорт&#10;| SIM – субсидии на импорт и изготовление  &#10;&#9;VA + TPI - SIM&#10;&#10; GDP_3( Sal, pr, CP, IT, A, fc)   /* Need check &#10;Расчет ВВП за год&#10;| Sal – это средства, затраченные на выплаты сотрудникам&#10;| pr - стоимость аренды&#10;| CP – выручка от процентов по банковским вкладам&#10;| IT – косвенные налоги&#10;| A – амортизация&#10;| fc – зарубежный чистый факторный доход &#10;&#9;Sal + pr + CP + IT + A - fc">
         <font>
            <Font name="Comic Sans MS Bold" size="13.0" />
         </font>
      </TextArea>
      <TextArea fx:id="Inlet" layoutX="300.0" layoutY="35.0" prefHeight="227.0" prefWidth="204.0" promptText="Ввод калькулятора">
         <font>
            <Font name="Comic Sans MS Bold" size="13.0" />
         </font>
      </TextArea>
      <TextArea fx:id="Conclusion" layoutX="549.0" layoutY="35.0" prefHeight="524.0" prefWidth="204.0" promptText="Вывод калькулятора">
         <font>
            <Font name="Comic Sans MS Bold" size="13.0" />
         </font>
      </TextArea>
      <Button fx:id="Equally" layoutX="405.0" layoutY="281.0" mnemonicParsing="false" onMouseClicked="#signUpBtClick" prefHeight="29.0" prefWidth="100.0" style="-fx-background-color: #B4D2D2;" text="Расчёт">
         <font>
            <Font name="Comic Sans MS Bold" size="13.0" />
         </font>
      </Button>
      <LineChart fx:id="LineChart" layoutX="273.0" layoutY="318.0" prefHeight="263.0" prefWidth="246.0">
        <xAxis>
          <NumberAxis side="BOTTOM" tickLabelFill="#fff4f4"/>
        </xAxis>
        <yAxis>
          <NumberAxis prefHeight="222.0" prefWidth="38.0" side="LEFT" tickLabelFill="#fff4f4" />
        </yAxis>
      </LineChart>
      <Button fx:id="Epp" layoutX="300.0" layoutY="281.0" mnemonicParsing="false" onMouseClicked="#ClickGrafics" prefHeight="29.0" prefWidth="100.0" style="-fx-background-color: #B4D2D2;" text="График">
         <font>
            <Font name="Comic Sans MS Bold" size="13.0" />
         </font>
      </Button>
   </children>
</AnchorPane>
